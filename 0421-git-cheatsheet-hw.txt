Git Cheatsheet

Introduction to Git
	To get started, need a project (folder full of files)
	$ git init - ONLY ONCE
	$ git add file_name - to stage files
	$ git add -A - to stage all files
	$ git commit -m “Comment.” - to commit messages
	$ git commit -a -m “Comment.” - combine staging and commit in one
	$ git status - 1. To check git init, 2. Files staged, 3. Files changed since last commit
	$ git log - check commits made
	$ wq - close out of log

Github
	$ git clone link - pull from Github

SSH
	$ pbcopy < ~/.ssh/id_rsa.pub - copy public key (for Github)
	$ git push [FILE] master <- CONFIRM - push to Github repository

More practice: https://try.github.io

From Codecademy
	Use Git commands to help keep track of changes made to a project:
	git init creates a new Git repository
	git status inspects the contents of the working directory and staging area
	git add adds files from the working directory to the staging area
	git diff shows the difference between the working directory and the staging area
	git commit permanently stores file changes from the staging area in the repository
	git log shows a list of all previous commits
	Let's take a moment to review the new commands:
	git checkout HEAD filename: Discards changes in the working directory.
	git reset HEAD filename: Unstages file changes in the staging area.
	git reset SHA: Can be used to reset to a previous commit in your commit history.
	Additionally, you learned a way to add multiple files to the staging area with a single command:
	git add filename_1 filename_2

The following commands are useful in the Git branch workflow.
	git branch: Lists all a Git project's branches.
	git branch branch_name: Creates a new branch.
	git checkout branch_name: Used to switch from one branch to another.
	git merge branch_name: Used to join file changes from one branch to another.

We must fix the merge conflict.
In the code editor, look at resume.txt. Git uses markings to indicate the HEAD(master) version of the file and the fencingversion of the file, like this

Git asks us which version of the file to keep: the version on master or the version onfencing. You decide you want thefencing version.

From the code editor:
Delete the content of the line as it appears in the master branch
Delete all of Git's special markingsincluding the words HEAD and fencing. If any of Git's markings remain, for example,>>>>>>> and =======, the conflict remains.
Add resume.txt to the staging area.
Now, make a commit. For your commit message, type "Resolve merge conflict" to indicate the purpose of the commit.

	git branch -d branch_name: Deletes the branch specified.
	We also learned the following commands
	git clone: Creates a local copy of a remote.
	git remote -v: Lists a Git project's remotes.
	git fetch: Fetches work from the remote into the local copy.
	git merge origin/master: Mergesorigin/master into your local branch.
	git push origin <branch_name>: Pushes a local branch to the origin remote.